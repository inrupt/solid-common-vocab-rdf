#
# This file represents instance data, and is not intended for vocab terms.
# The purpose is simply to play around with the notions of data in a Pod, and
# for testing ACL or ACP patterns, or notifications, or multiple
# Pods-per-WebID, etc.
#
prefix rdfs:     <http://www.w3.org/2000/01/rdf-schema#>
prefix schema:   <https://schema.org/>
prefix ldp:      <http://www.w3.org/ns/ldp#>

prefix ex:       <https://example.com#>
prefix my-pod:   <https://pat.best-pod-provider.com/pod/>


#
# A single blog entry - but it's a 'complex' entity, with a 'structure' made up of a 'Header' and
# 'Footer' and attachments, etc.
#
my-pod:Blog-Entry-1 a schema:BlogPosting ;
    schema:title "How to Cook for Forty Humans"@en ;
    schema:articleBody "Lisa Simpson - 'Truly there were monsters on that ship, and truly we were them.'"@en ;
    schema:messageAttachment <https://simpsonswiki.com/wiki/How_to_Cook_for_Forty_Humans> ;
    schema:hasPart my-pod:Blog-Entry-1-Structure .
my-pod:Blog-Entry-1-Structure
    schema:hasPart my-pod:Blog-Entry-1-Structure-Header ;
    schema:hasPart my-pod:Blog-Entry-1-Structure-Footer .
my-pod:Blog-Entry-1-Structure-Header rdfs:comment "Arbitrary header contents..."@en .
my-pod:Blog-Entry-1-Structure-Footer
    rdfs:comment "My footer actually has a bike as part of it..."@en ;
    schema:hasPart my-pod:Bike-Cannondale-EVO ;

# Loops are totally fine, SPARQL property paths will not infinitely recurse!
    schema:hasPart my-pod:Blog-Entry-1 ;
    ldp:contains my-pod:Blog-Entry-1 .
