prefix rdf:      <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs:     <http://www.w3.org/2000/01/rdf-schema#>
prefix xsd:      <http://www.w3.org/2001/XMLSchema#>
prefix owl:      <http://www.w3.org/2002/07/owl#>
prefix dcterms:  <http://purl.org/dc/terms/>
prefix skos:     <http://www.w3.org/2004/02/skos/core#>
prefix olo:      <http://purl.org/ontology/olo/core#>
prefix ldp:      <http://www.w3.org/ns/ldp#>
prefix schema:   <https://schema.org/>
prefix vann:     <http://purl.org/vocab/vann/>
prefix dalicc:   <http://dalicc.net/licenselibrary/>

prefix gconsent:       <https://w3id.org/GConsent#>
prefix inrupt_gen:     <https://w3id.org/inrupt/namespace/vocab/tool/artifact_generator/>

prefix inrupt_consent: <https://inrupt.com/vocab/consent#>

prefix project:        <https://data.company.com/vocab/apps/project#>

#
# This vocab doesn't exist yet, but I've requested an update to the WebID draft spec (from Henry Story on the Solid
# Gitter channel (1st Sept 2018)).
#
prefix webid: <https://www.w3.org/ns/webid#>

#
# Describe our vocabulary - i.e., an English description, its version, who created it, its
# suggested prefix, its license, etc.
#
inrupt_consent: a owl:Ontology , inrupt_gen:Ontology ;
	owl:versionInfo "0.0.1" ;
    owl:versionIRI <https://inrupt.com/vocab/consent/0.0.1> ;
	dcterms:creator <https://w3id.org/inrupt/namespace/webid/inrupt> ;
	dcterms:issued "2019/01/01"^^xsd:date ;
 	dcterms:title "Inrupt Consent vocabulary"@en ;
	dcterms:description "Consent vocabulary defining Inrupt-specific terms, especially terms that provide context"@en ;
	vann:preferredNamespacePrefix "inrupt_consent" ;
	vann:preferredNamespaceUri "https://inrupt.com/vocab/consent#" ;
	dcterms:license dalicc:MIT .


inrupt_consent:defaultConsentExpiryMonths a rdf:Property ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:label "Default Consent Expiry (Months)"@en ;
    rdfs:comment """Property stating the default expiry period (in months) for consent. This value may be
 overridden in many scenarios, but is useful for providing a default."""@en .

#
# Waiting for Harsh to update GDPRtEXT and GDPRov to use prefixes for all terms, so 'borrowing' this term for now...
#
inrupt_consent:Controller rdf:type owl:Class ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:subClassOf <http://purl.org/adaptcentre/openscience/ontologies/gdprov#ThirdParty> ;
    rdfs:comment "A ThirdPartyDataController is a Third Party entity that acts as a Data Controller"@en ;
    rdfs:label
#<http://purl.org/adaptcentre/openscience/ontologies/GDPRtEXT#Controller> ,
              "Controller"@en .

inrupt_consent:hasController a rdf:Property ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:label "Has Controller"@en ;
    rdfs:comment """Should be in a more authoritative vocab... Provides a convenient link directly to the Data
 Controller responsible for collecting and managing personal data in a consent context."""@en .


inrupt_consent:replacesConsent a rdf:Property ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:label "Replaces Consent"@en ;
    rdfs:comment """(Should propose adding to GConsent vocab) Property linking back to the Consent that the current
 Consent replaces. It's necessary to complete replace a Consent object when the data subject
 changes the Purpose (e.g., removes the Sharing action) or changes the structure of the personal
 data being consented (e.g., such as a new field being added)."""@en .

inrupt_consent:wasReplacedByConsent a rdf:Property ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:label "Was Replaced By Consent"@en ;
    rdfs:comment """(Should propose adding to GConsent vocab) Property linking an old Consent to the Consent
 that replaces it. It's necessary to complete replace a Consent object when the data subject
 changes the Purpose (e.g., removes the Sharing action) or changes the structure of the personal
 data being consented (e.g., such as a new field being added)."""@en .


inrupt_consent:profileContainsConsent a rdf:Property ;
    owl:subPropertyOf ldp:contains ;
    rdfs:isDefinedBy inrupt_consent: ;
#    rdfs:domain gconsent:PersonalData ;    # Can be personal or non-personal data.
    rdfs:range gconsent:Consent ;
    rdfs:label "Profile Contains Consent"@en ;
    rdfs:comment "Property linking a user's profile (which can contain personal data or non-personal data) to it's current Consent."@en .



inrupt_consent:latestConsentInstance a rdf:Property ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:label "Should be in GConsent..."@en ;
    rdfs:comment """Should be in GConsent...Provides a convenient link directly to the last ConsentInstance in the
 chain (rather than having to traverse the linked list, or querying for 'most recent')."""@en .


inrupt_consent:ConsentContainer a rdfs:Class ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:label "Consent Container"@en ;
    rdfs:comment """Consent container (which is a collection of Consent occurances)."""@en .

inrupt_consent:hasConsentContainer a rdf:Property ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:label "Has Consent Container"@en ;
    rdfs:comment """Property linking a consent with it's container."""@en .



inrupt_consent:capturedByWebId a rdf:Property ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:subPropertyOf gconsent:isContextForConsentInstance ;
    rdfs:label "WebID of entity capturing consent"@en ;
    rdfs:comment '''The WebID of the individual that captured or
 obtained this instance of consent.''' ;
    rdfs:domain gconsent:ConsentInstance ;
    rdfs:range webid:webId .

inrupt_consent:isWebIdThatCapturedGivenConsent a rdf:Property ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:subPropertyOf gconsent:isContextForConsentInstance ;
    rdfs:label "is WebID of entity that captured this consent"@en ;
    rdfs:comment "The WebID of the entity that captured this consent instance."@en ;
    rdfs:domain webid:webId ;
    rdfs:range gconsent:ConsentInstance .


inrupt_consent:capturedByOrganisationWebId a rdf:Property ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:subPropertyOf gconsent:isContextForConsentInstance ;
    rdfs:label "WebID of the organization capturing/obtaining consent"@en ;
    rdfs:comment '''The WebID of the organisation (e.g., an NGO, a mobile operator, a merchant, etc.) that captured or
 obtained this instance of consent.''' ;
    rdfs:domain gconsent:ConsentInstance ;
    rdfs:range webid:webId .

inrupt_consent:isOrganisationWebIdThatCapturedGivenConsent a rdf:Property ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:subPropertyOf gconsent:isContextForConsentInstance ;
    rdfs:label "WebID of organisation that captured this consent"@en ;
    rdfs:comment "The WebID of the organisation that captured this consent instance."@en ;
    rdfs:domain webid:webId ;
    rdfs:range gconsent:ConsentInstance .


inrupt_consent:capturedThroughApplication a rdf:Property ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:subPropertyOf gconsent:isContextForConsentInstance ;
    rdfs:label "Captured through application"@en ;
    rdfs:comment "Links the captured/obtained consent with the specific application used."@en ;
    rdfs:domain gconsent:ConsentInstance ;
    rdfs:range schema:SoftwareApplication .

inrupt_consent:isApplicationForGivenConsent a rdf:Property ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:subPropertyOf gconsent:isContextForConsentInstance ;
    rdfs:label "is Application For Given Consent"@en ;
    rdfs:comment "Links the application object to the consent instances obtained using it."@en ;
    rdfs:domain schema:SoftwareApplication ;
    rdfs:range gconsent:ConsentInstance .


inrupt_consent:capturedThroughWebForm a rdf:Property ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:subPropertyOf gconsent:hasContext ;
    rdfs:label "capturedThroughWebForm"@en ;
    rdfs:comment "Links the captured/obtained consent with the specific version of web form filled-in by the user."@en ;
    rdfs:domain gconsent:ConsentInstance ;
    rdfs:range inrupt_gen:WebForm .

inrupt_consent:isWebFormForGivenConsent a rdf:Property ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:subPropertyOf gconsent:isContextForConsentInstance ;
    rdfs:label "isWebFormForGivenConsent"@en ;
    rdfs:comment "Links the Web Form object to the consent instances obtained using it."@en ;
    rdfs:domain inrupt_gen:WebForm ;
    rdfs:range gconsent:ConsentInstance .



#
# These terms should be in a project-specific namespace - but then we'd need to create that vocab (since our generator
# can only handle one prefix at the moment).
#
inrupt_consent:ProjectApp a rdfs:Class ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:subClassOf schema:SoftwareApplication ;
    rdfs:label "Project Applications"@en ;
    rdfs:comment '''The class of applications that are considered to make up the entire Project eco-system, as developed by
Company. Project can consist of a number of applications (e.g., a registration app, a reporting tool, a personal
data manager app).''' .

inrupt_consent:webFormRegistration a rdf:Property ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:subPropertyOf gconsent:isContextForConsentInstance, schema:WebPage ;
    rdfs:label "Registration Web Form on Project system"@en ;
    rdfs:comment "Project Web form used to gather registration data for an individual."@en .


#
# We could probably defined an entire Class of registration apps, even just within Project. Our current one is
# Android-only for instance...
# # We could also think about assigning a WebID specifically for this application (would be nice to have the developers
# as a 'friends-list' in that profile, and maybe links to bug-tracking or Git issues...!
# So a webID like this maybe: <https://app_pam_registration_android.localhost:8443/profile/card#me>
#
#<https://data.company.com/registry/app/project/registration/Android> a rdfs:Class, project:ProjectApp ;
inrupt_consent:app_pam_registration_android a rdfs:Class, project:ProjectApp ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:label "Project Registration"@en ;
    rdfs:comment "The Project registration app (currently native Android app only)."@en .

#<https://data.company.com/registry/app/project/reportingWebApp> a rdfs:Class, project:ProjectApp ;
inrupt_consent:app_pam_reporting_web a rdfs:Class, project:ProjectApp ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:label "Project Reporting"@en ;
    rdfs:comment "The Project reporting webapp, which provides high-level analysis of the Project eco-system)."@en .

#<https://data.company.com/registry/app/project/personalWebApp> a rdfs:Class, project:ProjectApp ;
inrupt_consent:app_pam_personal_web a rdfs:Class, project:ProjectApp ;
    rdfs:isDefinedBy inrupt_consent: ;
    rdfs:label "Project Personal"@en ;
    rdfs:comment "The Project Personal Data Manager webapp, used by individuals to manage their profiles."@en .
