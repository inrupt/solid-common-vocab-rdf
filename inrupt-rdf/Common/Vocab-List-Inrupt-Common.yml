#
# This file contains a simple list of vocabularies that we bundle together to
# form the collective set of Inrupt Common vocabularies.
#
# For example, for Java developers we can generate a single JAR, or for
# JavaScript we can generate a single npm module, that developers can depend
# on directly and easily get immediate access to source-code constants for all
# the terms in all of these vocabularies.
#
# Local vocabularies can be provided relative to the location of this resource
# list file.
#
artifactName: vocab-inrupt-common
artifactGeneratorVersion: 0.13.1

versioning:
  type: git
  url: https://github.com/inrupt/solid-common-vocab-rdf.git
  versioningTemplates:
    - templateInternal: ".gitignore.hbs"
      fileName: ".gitignore"

license:
  path: "../../LICENSE"
  fileName: "LICENSE"
  header: "../../LICENSE_HEADER.js"
  name: "MIT"

artifactToGenerate:
  # This is the configuration of the DEFAULT Java artifact - i.e. where the name
  # of the generated JAR does not contain details of it's dependencies (e.g.
  # whether it provides VocabTerm constants or just string constants, or whether
  # it depends on RDF4J or Jena or RDF Commons, etc.).
  - programmingLanguage: Java
    artifactVersion: 0.5.8-SNAPSHOT

    artifactDirectoryName: Java
    sourceFileExtension: java
    javaPackageName: com.inrupt.vocab.inrupt.common

    solidCommonVocabVersion: 0.0.3
    rdf4jVersion: 3.4.2
    templateInternal: solidCommonVocabDependent/java/rdf4j/vocab.hbs

    # Currently we're just adding terms as they occur in vocabs, and not all possible keywords.
    languageKeywordsToUnderscore:
      - class     # Defined in VCard.
      - abstract  # Defined in DCTerms.
      - default   # Defined in ACL
    packaging:
    - packagingTool: maven
      groupId: com.inrupt
      publish:
      - key: "mavenLocal"
        command: "mvn --version && mvn install"
      - key: "mavenRemote"
        command: "mvn deploy"
      - key: "cloudsmith"
        command: "mvn -s /home/runner/work/solid-common-vocab-rdf/solid-common-vocab-rdf/settings.xml deploy --log-file ../../../mvn-deploy.log"
      packagingTemplates: 
      - templateInternal: solidCommonVocabDependent/java/rdf4j/pom.hbs
        fileName: pom.xml
      repository:
      - type: repository
        id: cloudsmith-staging
        url: https://maven.cloudsmith.io/inrupt/sdk-staging/
      - type: snapshotRepository
        id: cloudsmith-development
        url: https://maven.cloudsmith.io/inrupt/sdk-development/

  # This is the configuration of the DEFAULT TypeScript artifact - i.e. where
  # the name of the generated npm module does not contain details of it's
  # dependencies (e.g. whether it provides VocabTerm constants or just string
  # constants, or whether it depends on RDF4J or Jena or RDF Commons, etc.).
  - programmingLanguage: TypeScript
    artifactVersion: "0.7.0"

    artifactDirectoryName: TypeScript
    sourceFileExtension: ts

    solidCommonVocabVersion: "^0.5.3"
    templateInternal: solidCommonVocabDependent/typescript/rdfjsRdfDataFactory/vocab.hbs

    packaging:
      - packagingTool: npm
        npmModuleScope: "@inrupt/"
        typescriptVersion: "^4.1.3"
        rdfjsTypesVersion: "^4.0.0"
        rdfjsImplVersion: "^1.0.4"
        rdfjsNamespaceVersion: "^1.1.0"
        rdfjsNamespaceTypesVersion: "^1.1.1"
        rollupVersion: "^2.36.1"
        rollupTypescriptPluginVersion: "^0.29.0"
        rollupCommonjsPluginVersion: "^17.0.0"
        rollupNodeResolveVersion: "^11.0.1"
        bundleName: "InruptVocabCommon"
        publish:
        - key: "npmLocal"
          command: "npm unpublish --force --registry http://localhost:4873/ && npm install --registry http://localhost:4873/ && npm run build && npm publish --registry http://localhost:4873/"
        # The following command should only run in CI.
        - key: "npmPublic"
          command: "npm install --registry https://registry.npmjs.org/ && npm run build && npm publish --registry https://registry.npmjs.org/ --access public"
        packagingTemplates:
          - templateInternal: solidCommonVocabDependent/typescript/rdfjsRdfDataFactory/package.hbs
            fileName: package.json
          - templateInternal: generic/typescript/index.hbs
            fileName: index.ts
          - templateInternal: generic/typescript/tsconfig.hbs
            fileName: tsconfig.json
          - templateInternal: generic/typescript/rollup.config.hbs
            fileName: rollup.config.js  

  - programmingLanguage: TypeScript
    artifactVersion: "0.7.0"

    artifactDirectoryName: TypeScript-rdfjs-RdfDataFactory
    sourceFileExtension: ts
    artifactSuffix: -rdfjs-RdfDataFactory

    solidCommonVocabVersion: "^0.5.3"
    templateInternal: solidCommonVocabDependent/typescript/rdfjsRdfDataFactory/vocab.hbs

    packaging:
      - packagingTool: npm
        npmModuleScope: "@inrupt/"
        typescriptVersion: "^4.1.3"
        rdfjsTypesVersion: "^4.0.0"
        rdfjsImplVersion: "^1.0.4"
        rdfjsNamespaceVersion: "^1.1.0"
        rdfjsNamespaceTypesVersion: "^1.1.1"
        rollupVersion: "^2.36.1"
        rollupTypescriptPluginVersion: "^0.29.0"
        rollupCommonjsPluginVersion: "^17.0.0"
        rollupNodeResolveVersion: "^11.0.1"
        bundleName: "InruptVocabCommon"
        publish:
          - key: "npmLocal"
            command: "npm unpublish --force --registry http://localhost:4873/ && npm install --registry http://localhost:4873/ && npm run build && npm publish --registry http://localhost:4873/"
          # The following command should only run in CI.
          - key: "npmPublic"
            command: "npm install --registry https://registry.npmjs.org/ && npm run build && npm publish --registry https://registry.npmjs.org/ --access public"
        packagingTemplates:
          - templateInternal: solidCommonVocabDependent/typescript/rdfjsRdfDataFactory/package.hbs
            fileName: package.json
          - templateInternal: generic/typescript/index.hbs
            fileName: index.ts
          - templateInternal: generic/typescript/tsconfig.hbs
            fileName: tsconfig.json
          - templateInternal: generic/typescript/rollup.config.hbs
            fileName: rollup.config.js

  # Note:
  # At the moment (Jan 2021), it appears the rdfjs-base implementation does not
  # export TypeScript types for 'DataFactory' (it does export other types, and it
  # does export DataFactory as a plain JavaScript function, just not the proper
  # RDF/JS interface DataFactory type).
  #
#  - programmingLanguage: TypeScript
#    artifactVersion: "0.7.0"
#    artifactDirectoryName: TypeScript-rdfjs
#    templateInternal: rdfLibraryDependent/typescript/rdfjsBase/vocab.hbs
#    sourceFileExtension: ts
#    artifactSuffix: -rdfjs
#    packaging:
#      - packagingTool: npm
#        npmModuleScope: "@inrupt/"
#        typescriptVersion: "^4.1.3"
#        rdfjsTypesVersion: "^4.0.0"
#        rdfjsImplVersion: "^1.2.0"
#        rdfjsNamespaceVersion: "^1.1.0"
#        rdfjsNamespaceTypesVersion: "^1.1.1"
#        rollupVersion: "^2.36.1"
#        rollupTypescriptPluginVersion: "^0.29.0"
#        rollupCommonjsPluginVersion: "^17.0.0"
#        rollupNodeResolveVersion: "^11.0.1"
#        bundleName: "InruptVocabCommon"
#        publish:
#          - key: "npmLocal"
#            command: "npm unpublish --force --registry http://localhost:4873/ && npm install --registry http://localhost:4873/ && npm run build && npm publish --registry http://localhost:4873/"
#          # The following command should only run in CI.
#          - key: "npmPublic"
#            command: "npm install --registry https://registry.npmjs.org/ && npm run build && npm publish --registry https://registry.npmjs.org/ --access public"
#        packagingTemplates:
#          - templateInternal: rdfLibraryDependent/typescript/rdfjsBase/package.hbs
#            fileName: package.json
#          - templateInternal: generic/typescript/index.hbs
#            fileName: index.ts
#          - templateInternal: generic/typescript/tsconfig.hbs
#            fileName: tsconfig.json
#          - templateInternal: generic/typescript/rollup.config.hbs
#            fileName: rollup.config.js

  - programmingLanguage: JavaScript
    artifactVersion: "0.7.0"

    artifactDirectoryName: JavaScript-StringLiteral
    sourceFileExtension: js
    artifactSuffix: -StringLiteral

    templateInternal: stringLiteral/javascript/vocab.hbs

    packaging:
      - packagingTool: npm
        npmModuleScope: "@inrupt/"
        rollupVersion: "^2.36.1"
        rollupCommonjsPluginVersion: "^17.0.0"
        rollupNodeResolveVersion: "^11.0.1"
        bundleName: "VocabCommon"
        publish:
          - key: "npmLocal"
            command: "npm unpublish --force --registry http://localhost:4873/ && npm install --registry http://localhost:4873/ && npm run build && npm publish --registry http://localhost:4873/"
          # The following command should only run in CI.
          - key: "npmPublic"
            command: "npm install --registry https://registry.npmjs.org/ && npm run build && npm publish --registry https://registry.npmjs.org/ --access public"
        packagingTemplates:
          - templateInternal: stringLiteral/javascript/package.hbs
            fileName: package.json
          - templateInternal: generic/javascript/index.hbs
            fileName: index.js
          - templateInternal: generic/javascript/rollup.config.hbs
            fileName: rollup.config.js

vocabList:
  - description: Inrupt Common Vocabulary, for terms common across all of Inrupt.
    inputResources:
      - CopyOfVocab/inrupt-common.ttl

  - description: User Interface (UI) Common Vocabulary, for terms common across all Inrupt UI.
    inputResources:
      - CopyOfVocab/inrupt-ui-common.ttl

  - description: Test vocabulary - defines classes and properties for testing.
    inputResources:
      - CopyOfVocab/inrupt-test.ttl
