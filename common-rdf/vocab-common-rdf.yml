#
# This file contains a simple list of vocabularies that we bundle together to
# form the collective set of what we consider 'Common' RDF vocabularies.
#
# These are the vocabs that we feel will be the most commonly used across
# general RDF development efforts, and so we list them here to allow our
# artifact generators to create programming-language-specific bundles
# providing convenient constants representing the terms from these
# vocabularies.
#
# For example, for Java developers we can generate a single JAR, or for
# JavaScript we can generate a single npm module, that developers can depend
# on directly and easily get immediate access to source-code constants for all
# the terms in all of these vocabularies.
#
# Local vocabularies can be provided relative to the location of this resource
# list file.
#

artifactName: vocab-common-rdf
artifactGeneratorVersion: 1.0.4

versioning:
  type: git
  url: https://github.com/inrupt/solid-common-vocab-rdf.git
  versioningTemplates:
    - templateInternal: ".gitignore.hbs"
      fileName: ".gitignore"

license:
  path: "../LICENSE"
  fileName: "LICENSE"
  header: "../LICENSE_HEADER.js"
  name: "MIT"

artifactToGenerate:
  # This is the configuration of the DEFAULT Java artifact - i.e., where the name
  # of the generated JAR does not contain details of its dependencies (e.g.,
  # whether it provides SolidCommonVocab constants or just string constants, or whether
  # it depends on RDF4J or Jena or RDF Commons, etc.).
  - programmingLanguage: Java
    artifactVersion: 0.8.2-SNAPSHOT
    artifactNamePrefix: ""
    artifactNameSuffix: ""

    artifactDirectoryName: Java
    sourceFileExtension: java
    javaPackageName: com.inrupt.vocab.common.rdf

    templateInternal: stringLiteral/java/vocab.hbs

    # Currently we're just adding terms as they occur in vocabs, and not all possible keywords.
    languageKeywordsToUnderscore:
      - class     # Defined in VCard.
      - abstract  # Defined in DCTerms.
      - for       # Defined in ?.
      - default   # Defined in ACL.
      - boolean   # Defined in XML Schema Datatypes.
      - float     # Defined in XML Schema Datatypes.
      - double    # Defined in XML Schema Datatypes.
      - byte      # Defined in XML Schema Datatypes.
      - int       # Defined in XML Schema Datatypes.
      - long      # Defined in XML Schema Datatypes.
      - short     # Defined in XML Schema Datatypes.
    packaging:
      - packagingTool: maven
        groupId: com.inrupt
        publish:
          - key: "mavenLocal"
            command: "mvn --version && mvn install"
          - key: "mavenRemote"
            command: "mvn deploy"
          - key: "cloudsmith"
            command: "mvn -s /home/runner/work/solid-common-vocab-rdf/solid-common-vocab-rdf/settings.xml deploy --log-file ../../../mvn-deploy.log"
        packagingTemplates:
          - templateInternal: stringLiteral/java/pom.hbs
            fileName: pom.xml
        repository:
          - type: repository
            id: cloudsmith-staging
            url: https://maven.cloudsmith.io/inrupt/sdk-staging/
          - type: snapshotRepository
            id: cloudsmith-development
            url: https://maven.cloudsmith.io/inrupt/sdk-development/


  - programmingLanguage: Java
    artifactVersion: 0.8.2-SNAPSHOT
    artifactNamePrefix: ""
    artifactNameSuffix: -solidcommonvocab-rdf4j

    artifactDirectoryName: Java
    sourceFileExtension: java
    javaPackageName: com.inrupt.vocab.common.rdf

    solidCommonVocabVersion: 0.0.3
    rdf4jVersion: 3.4.2
    templateInternal: solidCommonVocabDependent/java/rdf4j/vocab.hbs

    # Currently we're just adding terms as they occur in vocabs, and not all possible keywords.
    languageKeywordsToUnderscore:
      - class     # Defined in VCard.
      - abstract  # Defined in DCTerms.
      - for       # Defined in ?.
      - default   # Defined in ACL.
      - boolean   # Defined in XML Schema Datatypes.
      - float     # Defined in XML Schema Datatypes.
      - double    # Defined in XML Schema Datatypes.
      - byte      # Defined in XML Schema Datatypes.
      - int       # Defined in XML Schema Datatypes.
      - long      # Defined in XML Schema Datatypes.
      - short     # Defined in XML Schema Datatypes.
    packaging:
      - packagingTool: maven
        groupId: com.inrupt
        publish:
          - key: "mavenLocal"
            command: "mvn --version && mvn install"
          - key: "mavenRemote"
            command: "mvn deploy"
          - key: "cloudsmith"
            command: "mvn -s /home/runner/work/solid-common-vocab-rdf/solid-common-vocab-rdf/settings.xml deploy --log-file ../../../mvn-deploy.log"
        packagingTemplates:
          - templateInternal: solidCommonVocabDependent/java/rdf4j/pom.hbs
            fileName: pom.xml
        repository:
          - type: repository
            id: cloudsmith-staging
            url: https://maven.cloudsmith.io/inrupt/sdk-staging/
          - type: snapshotRepository
            id: cloudsmith-development
            url: https://maven.cloudsmith.io/inrupt/sdk-development/

  - programmingLanguage: Java
    artifactVersion: 0.8.2-SNAPSHOT
    artifactNamePrefix: ""
    artifactNameSuffix: -stringliteral

    artifactDirectoryName: Java-StringLiteral
    sourceFileExtension: java
    javaPackageName: com.inrupt.vocab.common.rdf.stringliteral

    templateInternal: stringLiteral/java/vocab.hbs

    # Currently we're just adding terms as they occur in vocabs, and not all possible keywords.
    languageKeywordsToUnderscore:
      - class     # Defined in VCard.
      - abstract  # Defined in DCTerms.
      - for       # Defined in ?.
      - default   # Defined in ACL.
      - boolean   # Defined in XML Schema Datatypes.
      - float     # Defined in XML Schema Datatypes.
      - double    # Defined in XML Schema Datatypes.
      - byte      # Defined in XML Schema Datatypes.
      - int       # Defined in XML Schema Datatypes.
      - long      # Defined in XML Schema Datatypes.
      - short     # Defined in XML Schema Datatypes.
    packaging:
      - packagingTool: maven
        groupId: com.inrupt
        publish:
          - key: "mavenLocal"
            command: "mvn --version && mvn install"
          - key: "mavenRemote"
            command: "mvn deploy"
          - key: "cloudsmith"
            command: "mvn -s /home/runner/work/solid-common-vocab-rdf/solid-common-vocab-rdf/settings.xml deploy --log-file ../../../mvn-deploy.log"
        packagingTemplates:
          - templateInternal: stringLiteral/java/pom.hbs
            fileName: pom.xml
        repository:
          - type: repository
            id: cloudsmith-staging
            url: https://maven.cloudsmith.io/inrupt/sdk-staging/
          - type: snapshotRepository
            id: cloudsmith-development
            url: https://maven.cloudsmith.io/inrupt/sdk-development/


  - programmingLanguage: Java
    artifactVersion: 0.8.2-SNAPSHOT
    artifactNamePrefix: ""
    artifactNameSuffix: -solidcommonvocab-rdf4j

    artifactDirectoryName: Java-SolidCommonVocab-RDF4J
    sourceFileExtension: java
    javaPackageName: com.inrupt.vocab.common.rdf.rdf4j

    solidCommonVocabVersion: 0.0.3
    rdf4jVersion: 3.4.2
    templateInternal: solidCommonVocabDependent/java/rdf4j/vocab.hbs

    # Currently we're just adding terms as they occur in vocabs, and not all possible keywords.
    languageKeywordsToUnderscore:
      - class     # Defined in VCard.
    packaging:
      - packagingTool: maven
        groupId: com.inrupt
        publish:
          - key: "mavenLocal"
            command: "mvn --version && mvn install"
          - key: "mavenRemote"
            command: "mvn deploy"
          - key: "cloudsmith"
            command: "mvn -s /home/runner/work/solid-common-vocab-rdf/solid-common-vocab-rdf/settings.xml deploy --log-file ../../../mvn-deploy.log"
        packagingTemplates:
          - templateInternal: solidCommonVocabDependent/java/rdf4j/pom.hbs
            fileName: pom.xml
        repository:
          - type: repository
            id: cloudsmith-staging
            url: https://maven.cloudsmith.io/inrupt/sdk-staging/
          - type: snapshotRepository
            id: cloudsmith-development
            url: https://maven.cloudsmith.io/inrupt/sdk-development/


  - programmingLanguage: Java
    artifactVersion: 0.8.2-SNAPSHOT
    artifactNamePrefix: ""
    artifactNameSuffix: -commonsrdf-serviceloader

    artifactDirectoryName: Java-CommonsRdf-ServiceLoader
    sourceFileExtension: java
    javaPackageName: com.inrupt.vocab.common.rdf.commonsrdf.serviceloader

    # This config doesn't use our own vocab library - it uses a specific
    # underlying RDF library instead.
    commonsRdfVersion: 0.5.0
    templateInternal: rdfLibraryDependent/java/commonsRdfServiceLoader/vocab.hbs

    # Currently we're just adding terms as they occur in vocabs, and not all possible keywords.
    languageKeywordsToUnderscore:
      - class     # Defined in VCard.
    packaging:
      - packagingTool: maven
        groupId: com.inrupt
        publish:
          - key: "mavenLocal"
            command: "mvn --version && mvn install"
          - key: "mavenRemote"
            command: "mvn deploy"
          - key: "cloudsmith"
            command: "mvn -s /home/runner/work/solid-common-vocab-rdf/solid-common-vocab-rdf/settings.xml deploy --log-file ../../../mvn-deploy.log"
        packagingTemplates:
          - templateInternal: rdfLibraryDependent/java/commonsRdfServiceLoader/pom.hbs
            fileName: pom.xml
        repository:
          - type: repository
            id: cloudsmith-staging
            url: https://maven.cloudsmith.io/inrupt/sdk-staging/
          - type: snapshotRepository
            id: cloudsmith-development
            url: https://maven.cloudsmith.io/inrupt/sdk-development/

  # This is the configuration of the DEFAULT TypeScript artifact - i.e., where
  # the name of the generated npm module does not contain details of its
  # dependencies (e.g., whether it provides SolidCommonVocab constants or just string
  # literals, or whether it depends on RDF/JS or Jena or RDF Commons, etc.).
  - programmingLanguage: TypeScript
    artifactVersion: "1.0.5"
    artifactNamePrefix: ""
    artifactNameSuffix: ""

    artifactDirectoryName: TypeScript
    sourceFileExtension: ts

    templateInternal: stringLiteral/typescript/vocab.hbs

    packaging:
      - packagingTool: npm
        npmModuleScope: "@inrupt/"
        bundleName: "VocabCommon"

        typescriptVersion: "^4.1.3"
        rollupVersion: "^2.36.1"
        rollupTypescriptPluginVersion: "^0.29.0"
        rollupCommonjsPluginVersion: "^17.0.0"
        rollupNodeResolveVersion: "^11.0.1"

        publish:
          - key: "npmLocal"
            command: "npm unpublish --force --registry http://localhost:4873/ && npm install --registry http://localhost:4873/ && npm run build && npm publish --registry http://localhost:4873/"
          # The following command should only run in CI.
          - key: "npmPublic"
            command: "npm install --registry https://registry.npmjs.org/ && npm run build && npm publish --registry https://registry.npmjs.org/ --access public"
        packagingTemplates:
          - templateInternal: stringLiteral/typescript/package.hbs
            fileName: package.json
          - templateInternal: generic/typescript/index.hbs
            fileName: index.ts
          - templateInternal: generic/typescript/tsconfig.hbs
            fileName: tsconfig.json
          - templateInternal: generic/typescript/rollup.config.hbs
            fileName: rollup.config.js


  # This is the configuration of the DEFAULT SolidCommonVocab TypeScript
  # artifact - i.e., where the name of the generated npm module does not
  # contain details of the underlying RDF library dependencies (e.g.,
  # whether it depends on RDF/JS or a specific implementation, etc.).
  - programmingLanguage: TypeScript
    artifactVersion: "1.0.5"
    artifactNamePrefix: ""
    artifactNameSuffix: -solidcommonvocab

    artifactDirectoryName: TypeScript-SolidCommonVocab
    sourceFileExtension: ts

    solidCommonVocabVersion: "^1.0.0"
    rdfjsTypesVersion: "^1.0.1"
    rdfjsImplVersion: "^1.1.0"
    templateInternal: solidCommonVocabDependent/typescript/rdfjsRdfDataFactory/vocab.hbs

    packaging:
      - packagingTool: npm
        npmModuleScope: "@inrupt/"
        bundleName: "VocabCommon"

        typescriptVersion: "^4.1.3"
        rollupVersion: "^2.36.1"
        rollupTypescriptPluginVersion: "^0.29.0"
        rollupCommonjsPluginVersion: "^17.0.0"
        rollupNodeResolveVersion: "^11.0.1"

        publish:
          - key: "npmLocal"
            command: "npm unpublish --force --registry http://localhost:4873/ && npm install --registry http://localhost:4873/ && npm run build && npm publish --registry http://localhost:4873/"
          # The following command should only run in CI.
          - key: "npmPublic"
            command: "npm install --registry https://registry.npmjs.org/ && npm run build && npm publish --registry https://registry.npmjs.org/ --access public"
        packagingTemplates:
          - templateInternal: solidCommonVocabDependent/typescript/rdfjsRdfDataFactory/package.hbs
            fileName: package.json
          - templateInternal: generic/typescript/index.hbs
            fileName: index.ts
          - templateInternal: generic/typescript/tsconfig.hbs
            fileName: tsconfig.json
          - templateInternal: generic/typescript/rollup.config.hbs
            fileName: rollup.config.js


  - programmingLanguage: TypeScript
    artifactVersion: "1.0.5"
    artifactNamePrefix: ""
    artifactNameSuffix: -solidcommonvocab-rdfdatafactory

    artifactDirectoryName: TypeScript-SolidCommonVocab-RdfDataFactory
    sourceFileExtension: ts

    solidCommonVocabVersion: "^1.0.0"
    rdfjsTypesVersion: "^1.0.1"
    rdfjsImplVersion: "^1.1.0"
    templateInternal: solidCommonVocabDependent/typescript/rdfjsRdfDataFactory/vocab.hbs

    packaging:
      - packagingTool: npm
        npmModuleScope: "@inrupt/"
        bundleName: "VocabCommon"

        typescriptVersion: "^4.1.3"
        rollupVersion: "^2.36.1"
        rollupTypescriptPluginVersion: "^0.29.0"
        rollupCommonjsPluginVersion: "^17.0.0"
        rollupNodeResolveVersion: "^11.0.1"

        publish:
          - key: "npmLocal"
            command: "npm unpublish --force --registry http://localhost:4873/ && npm install --registry http://localhost:4873/ && npm run build && npm publish --registry http://localhost:4873/"
          # The following command should only run in CI.
          - key: "npmPublic"
            command: "npm install --registry https://registry.npmjs.org/ && npm run build && npm publish --registry https://registry.npmjs.org/ --access public"
        packagingTemplates:
          - templateInternal: solidCommonVocabDependent/typescript/rdfjsRdfDataFactory/package.hbs
            fileName: package.json
          - templateInternal: generic/typescript/index.hbs
            fileName: index.ts
          - templateInternal: generic/typescript/tsconfig.hbs
            fileName: tsconfig.json
          - templateInternal: generic/typescript/rollup.config.hbs
            fileName: rollup.config.js


  # Note:
# At the moment (Jan 2021), it appears the rdfjs-base implementation does not
# export TypeScript types for 'DataFactory' (it does export other types, and it
# does export DataFactory as a plain JavaScript function, just not the proper
# RDF/JS interface DataFactory type).
#
#  - programmingLanguage: TypeScript
#    artifactVersion: "1.0.4"
#    artifactNamePrefix: ""
#    artifactNameSuffix: -base
#
#    artifactDirectoryName: TypeScript-Base
#    templateInternal: rdfLibraryDependent/typescript/rdfjsBase-DataModel/vocab.hbs
#    sourceFileExtension: ts
#    packaging:
#      - packagingTool: npm
#        npmModuleScope: "@inrupt/"
#        bundleName: "VocabCommon"
#
#        typescriptVersion: "^4.1.3"
#        rdfjsImplVersion: "^1.2.0"
#        rollupVersion: "^2.36.1"
#        rollupTypescriptPluginVersion: "^0.29.0"
#        rollupCommonjsPluginVersion: "^17.0.0"
#        rollupNodeResolveVersion: "^11.0.1"
#
#        publish:
#          - key: "npmLocal"
#            command: "npm unpublish --force --registry http://localhost:4873/ && npm install --registry http://localhost:4873/ && npm run build && npm publish --registry http://localhost:4873/"
#          # The following command should only run in CI.
#          - key: "npmPublic"
#            command: "npm install --registry https://registry.npmjs.org/ && npm run build && npm publish --registry https://registry.npmjs.org/ --access public"
#        packagingTemplates:
#          - templateInternal: rdfLibraryDependent/typescript/rdfjsBase-DataModel/package.hbs
#            fileName: package.json
#          - templateInternal: generic/typescript/index.hbs
#            fileName: index.ts
#          - templateInternal: generic/typescript/tsconfig.hbs
#            fileName: tsconfig.json
#          - templateInternal: generic/typescript/rollup.config.hbs
#            fileName: rollup.config.js
#
#
  - programmingLanguage: TypeScript
    artifactVersion: "1.0.5"
    artifactNamePrefix: ""
    artifactNameSuffix: -rdfdatafactory

    artifactDirectoryName: TypeScript-RdfDataFactory
    sourceFileExtension: ts

    rdfjsTypesVersion: "^1.0.1"
    rdfjsImplVersion: "^1.1.0"
    templateInternal: rdfLibraryDependent/typescript/rdfjsRdfDataFactory/vocab.hbs

    packaging:
      - packagingTool: npm
        npmModuleScope: "@inrupt/"
        bundleName: "VocabCommon"

        typescriptVersion: "^4.1.3"
        rollupVersion: "^2.36.1"
        rollupTypescriptPluginVersion: "^0.29.0"
        rollupCommonjsPluginVersion: "^17.0.0"
        rollupNodeResolveVersion: "^11.0.1"

        publish:
          - key: "npmLocal"
            command: "npm unpublish --force --registry http://localhost:4873/ && npm install --registry http://localhost:4873/ && npm run build && npm publish --registry http://localhost:4873/"
          # The following command should only run in CI.
          - key: "npmPublic"
            command: "npm install --registry https://registry.npmjs.org/ && npm run build && npm publish --registry https://registry.npmjs.org/ --access public"
        packagingTemplates:
          - templateInternal: rdfLibraryDependent/typescript/rdfjsRdfDataFactory/package.hbs
            fileName: package.json
          - templateInternal: generic/typescript/index.hbs
            fileName: index.ts
          - templateInternal: generic/typescript/tsconfig.hbs
            fileName: tsconfig.json
          - templateInternal: generic/typescript/rollup.config.hbs
            fileName: rollup.config.js


  - programmingLanguage: TypeScript
    artifactVersion: "1.0.5"
    artifactNamePrefix: ""
    artifactNameSuffix: -stringliteral

    artifactDirectoryName: TypeScript-StringLiteral
    sourceFileExtension: ts

    templateInternal: stringLiteral/typescript/vocab.hbs

    packaging:
      - packagingTool: npm
        npmModuleScope: "@inrupt/"
        bundleName: "VocabCommon"

        typescriptVersion: "^4.1.3"
        rollupVersion: "^2.36.1"
        rollupTypescriptPluginVersion: "^0.29.0"
        rollupCommonjsPluginVersion: "^17.0.0"
        rollupNodeResolveVersion: "^11.0.1"

        publish:
          - key: "npmLocal"
            command: "npm unpublish --force --registry http://localhost:4873/ && npm install --registry http://localhost:4873/ && npm run build && npm publish --registry http://localhost:4873/"
          # The following command should only run in CI.
          - key: "npmPublic"
            command: "npm install --registry https://registry.npmjs.org/ && npm run build && npm publish --registry https://registry.npmjs.org/ --access public"
        packagingTemplates:
          - templateInternal: stringLiteral/typescript/package.hbs
            fileName: package.json
          - templateInternal: generic/typescript/index.hbs
            fileName: index.ts
          - templateInternal: generic/typescript/tsconfig.hbs
            fileName: tsconfig.json
          - templateInternal: generic/typescript/rollup.config.hbs
            fileName: rollup.config.js


vocabList:
#
# Note: These are not 'common' vocabs per se (so commented out), but provided here merely as
#  informational for anyone who may be interested in Resumes (CVs), and as an example of vocabs
#  that require an override to the Content-Type response header (since the server serving these
#  vocabs returns 'text/plain' when the content is actually RDF/XML).
#
#  - description: Resume (CV) vocab
#    nameAndPrefixOverride: cv
#    inputResources:
#      - http://rdfs.org/resume-rdf/cv.rdfs#
#    vocabContentTypeHeaderOverride: "application/rdf+xml"
#
#  - description: Resume (CV) base vocab
#    nameAndPrefixOverride: cv_base
#    inputResources:
#      - http://rdfs.org/resume-rdf/base.rdfs#
#    vocabContentTypeHeaderOverride: "application/rdf+xml"


  # Note: We *MUST* use the 'https://' URI for Schema.org, since the RIO parser
  # (used in our Java artifact generator) will not follow the 301 redirect from
  # 'http://', and so our RDF4J model will be empty and therefore so will our
  # generated source.
  #
  # Note: With over 2,500 terms, Schema.org as a whole is very big, and the
  # generated code can amount to over 700Kb. So instead we recommend using an
  # extension vocabulary that selectively includes relevant terms (see below).
#  - description: Schema.org (the full vocabulary)
#    inputResources:
#      - https://schema.org/version/latest/schema.ttl

  - description: Inrupt-determined cherry-picked Schema.org terms (that include label and comment translations)
    nameAndPrefixOverride: schema-inrupt
    inputResources:
      - https://schema.org/version/latest/schemaorg-current-http.ttl
    termSelectionResource: ./Extension/schema-inrupt-ext.ttl


  - description: vCard - for describing People and Organizations
    nameAndPrefixOverride: vcard
    inputResources:
      - http://www.w3.org/2006/vcard/ns#

# REMOVED TEMPORARILY TO REDUCE TOTAL NUMBER OF VOCABS...
#  - description: vCard with selective terms having translations - for describing People and Organizations
#    nameAndPrefixOverride: vcard-inrupt
#    inputResources:
#      - http://www.w3.org/2006/vcard/ns#
#    termSelectionResource: ./Extension/vcard-inrupt-ext.ttl


  - description: RDF (Resource Description Framework) - a framework for representing information in the Web
    nameAndPrefixOverride: rdf
    inputResources:
      - http://www.w3.org/1999/02/22-rdf-syntax-ns#

# REMOVED TEMPORARILY TO REDUCE TOTAL NUMBER OF VOCABS...
#  - description: RDF (Resource Description Framework) - with extensions (e.g., translations of labels or comments, etc.) from Inrupt
#    nameAndPrefixOverride: rdf-inrupt
#    inputResources:
#      - http://www.w3.org/1999/02/22-rdf-syntax-ns#
#    termSelectionResource: ./Extension/rdf-inrupt-ext.ttl

  - description: RDFS (RDF Schema) - a data-modelling vocabulary for RDF data
    nameAndPrefixOverride: rdfs
    inputResources:
      - http://www.w3.org/2000/01/rdf-schema#

  - description: XSD (XML Schema Definition) - provides datatypes for string, integer, float, date, etc.
    inputResources:
      - ./CopyOfVocab/inrupt-xml-schema.ttl

  - description: OWL (Web Ontology Language) - a Semantic Web language designed to represent rich and complex knowledge about things, groups of things, and relations between things
    nameAndPrefixOverride: owl
    inputResources:
      - http://www.w3.org/2002/07/owl#

  - description: LDP (Linked Data Platform) - defines a set of rules for HTTP operations on web resources, some based on RDF, to provide an architecture for read-write Linked Data on the web
    inputResources:
      - https://www.w3.org/ns/ldp#

# REMOVED TEMPORARILY TO REDUCE TOTAL NUMBER OF VOCABS...
#  - description: Inrupt LDP (Linked Data Platform) - with extensions (e.g., translations of labels or comments, etc.) from Inrupt
#    nameAndPrefixOverride: ldp-inrupt
#    inputResources:
#      - https://www.w3.org/ns/ldp#
#      - ./Extension/ldp-inrupt-ext.ttl

  - description: HTTP Ontology - terms from the HTTP protocol
    nameAndPrefixOverride: http
    inputResources:
      - http://www.w3.org/2011/http#

  - description: HTTPH Ontology - for describing the common HTTP headers. Namespace document is extremely sparse (as of Aug 2019), so extended
    nameAndPrefixOverride: httph-inrupt
    inputResources:
      - http://www.w3.org/2007/ont/httph#
      - ./Extension/http-header-inrupt-ext.ttl

  - description: OLO (Ordered List Ontology) - for describing ordered lists
    nameAndPrefixOverride: olo
    inputResources:
      - http://svn.code.sf.net/p/smiy/code/orderedlistonto/trunk/rdf/orderedlistontology.n3

  - description: Simple Knowledge Organisation System (SKOS)
    nameAndPrefixOverride: skos
    inputResources:
      - ./CopyOfVocab/inrupt-skos.ttl
      # REMOVED TEMPORARILY DUE TO REPEATED "socket hang up" ERRORS RETRIEVING DURING CI...
#      - http://www.w3.org/2004/02/skos/core#

  - description: Simple Knowledge Organisation System (SKOS) eXtension for Labels
    nameAndPrefixOverride: skos-xl
    inputResources:
      - ./CopyOfVocab/inrupt-skos-xl.ttl
      # REMOVED TEMPORARILY DUE TO REPEATED "socket hang up" ERRORS RETRIEVING DURING CI...
#      - http://www.w3.org/2008/05/skos-xl#
#    # Unfortunately, the SKOS-XL vocab doesn't support content negotiation properly
#    # at all. If basically ignores all content types and just returns RDF/XML
#    # *unless* the content-type contains 'text/html' (regardless of any 'q' values
#    # provided at all), in which case it returns HTML containing two RDFa triples.
#    # So unfortunately we need to work around this exception, and make sure we
#    # don't request 'text/html' at all for just this vocab (and since it only
#    # returns RDF/XML otherwise, we might as well explicitly ask for that).
#    vocabAcceptHeaderOverride: application/rdf+xml


  #
  # Tim Berners-Lee's UI vocabulary.
  #
  # Note: Resolving the actual namespace for this vocabulary returns N3 by
  # default. If you'd like to see the Turtle serialization of this vocabulary,
  # use this URL: https://www.w3.org/ns/ui.ttl
  #
  - description: UI Ontology
    nameAndPrefixOverride: ui
    inputResources:
      - http://www.w3.org/ns/ui#

  - description: UI Ontology - with extensions (e.g., translations of labels or comments, etc.) from Inrupt
    nameAndPrefixOverride: ui-inrupt
    inputResources:
      - http://www.w3.org/ns/ui#
      - ./Extension/ui-inrupt-ext.ttl

  #
  # Could not find an RDF representation for VANN initially, so I created my
  # own. But Jarlath found an RDF/XML version somewhere, so that should be the
  # authorative one (and once I add RDF/XML parsing to the generator I can
  # remove this local version...!)
  #
  - description: VANN - a vocabulary for annotating vocabulary descriptions
    inputResources:
      - ./CopyOfVocab/inrupt-vann.ttl

  - description: Dublin Core Terms - for describing resources
    nameAndPrefixOverride: dcterms
    inputResources:
      - http://dublincore.org/2012/06/14/dcterms.ttl

  #
  # Activity Streams 2.0 seems a little bit strange - i.e., it's namespace IRI
  # does not resolve to RDF (see below), and the best RDF definition (that we
  # can find!) of its terms refers to those terms using the 'http:' scheme
  # instead of the official 'https:' scheme (so we need to override that).
  #
  - description: Activity Streams 2.0 - for representing potential and completed activities
    nameAndPrefixOverride: as
    inputResources:
      # For Activity Streams 2.0, dereferencing the namespace IRI
      # (https://www.w3.org/ns/activitystreams#) does not return definitions in
      # RDF (it returns a JSON-LD context that maps the terms, but it provides
      # no meta-data for the terms themselves). The reasons for this appear to
      # be social as opposed to technical!
      # This is why we reference the IRI we do below.
#      - https://www.w3.org/ns/activitystreams#
       - https://www.w3.org/ns/activitystreams-owl
    # The input resource we use defines the vocabulary terms via 'http:'
    # instead of the correct 'https:' scheme, so we need to override that.
    namespaceOverride: https://www.w3.org/ns/activitystreams#

  - description: RLOG - RDF Logging Ontology
    nameAndPrefixOverride: rlog
    inputResources:
      # Currently (April 2020) getting server 500 errors when trying to
      # dereference this vocabulary. So for now we use a local copy of this
      # vocabulary.
#       - https://persistence.uni-leipzig.org/nlp2rdf/ontologies/rlog/rlog.owl
      - CopyOfVocab/inrupt-rlog.ttl

  - description: Friend of a friend, v0.99
    nameAndPrefixOverride: foaf
    inputResources:
      # In Oct 2021, the FOAF namespace URI was consistently timing out,
      # so we needed to pull from a local copy. But then (in early Nov 2021)
      # it came back online. So leaving this reference here in case it
      # re-occurs...
#     - ./CopyOfVocab/inrupt-foaf.ttl
      - http://xmlns.com/foaf/0.1/

  - description: Shape Expressions (ShEx) - for validating RDF
    nameAndPrefixOverride: shex
    inputResources:
      - https://www.w3.org/ns/shex#

  - description: Web Access Control Vocabulary
    nameAndPrefixOverride: acl
    namespaceOverride: http://www.w3.org/ns/auth/acl#
    inputResources:
      - http://www.w3.org/ns/auth/acl

  - description: POSIX Vocabulary
    inputResources:
      - CopyOfVocab/inrupt-posix.ttl

  - description: iCal - a vocabulary for description of events and calendars
    nameAndPrefixOverride: ical
    inputResources:
      - https://www.w3.org/2002/12/cal/ical

  - description: W3C Provenance Ontology (just the main prov-o terms)
    nameAndPrefixOverride: prov-o
    inputResources:
      - http://www.w3.org/ns/prov-o#
    # The PROV-O ontology is really a collection of ontologies (such as
    # http://www.w3.org/ns/prov-dictionary#, http://www.w3.org/ns/prov-links#,
    # http://www.w3.org/ns/prov-o-inverses#, etc.), but all their terms are
    # under the one namespace, which we provide here (otherwise the generator
    # will think there's a mismatch between the vocab URL and the namespace of
    # the terms the vocab contains).
    namespaceOverride: http://www.w3.org/ns/prov#

  - description: W3C Content Negotiation by Profile
    nameAndPrefixOverride: altr
    # Perhaps because this is not a standard yet, nothing is returned from
    # from the current namespace IRI, so use this instead (as referenced in the
    # '6. Abstract Model' section of the working draft here:
    #   https://w3c.github.io/dx-connegp/connegp/#altr-owl).
    inputResources:
      - https://w3c.github.io/dx-connegp/connegp/altr.ttl
    namespaceOverride: http://www.w3.org/ns/dx/conneg/altr#
    # This vocab defines terms that are not actually defined in the vocabulary
    # itself. For instance it defines 'rdf:Resource', and a couple of Dublin
    # Core terms, to provide extra contextual information for the vocabulary
    # itself. Normally we'd throw an error on encountering such terms, as it can
    # indicate a simple typo - but this can be overridden using this option if
    # needed.
    ignoreNonVocabTerms: true

  - description: Hydra is a lightweight vocabulary to create hypermedia-driven Web APIs
    inputResources:
      - http://www.w3.org/ns/hydra/core#

  - description: Data Catalog Vocabulary (DCAT) - Version 2
    nameAndPrefixOverride: dcat
    inputResources:
      - http://www.w3.org/ns/dcat#
    ignoreNonVocabTerms: true

  - description: W3C Bookmark vocabulary
    nameAndPrefixOverride: bookmark
    inputResources:
      - http://www.w3.org/2002/01/bookmark#

  - description: SPARQL Service Description vocabulary
    nameAndPrefixOverride: sd
    inputResources:
      - https://www.w3.org/ns/sparql-service-description#

  - description: The Vocabulary of Interlinked Datasets (VoID) is an RDF Schema vocabulary for expressing metadata about RDF datasets.
    inputResources:
      - ./CopyOfVocab/inrupt-void.ttl

  - description: The ODRL Vocabulary and Expression defines a set of concepts and terms (the vocabulary) and encoding mechanism (the expression) for permissions and obligations statements describing digital content usage based on the ODRL Information Model.
    nameAndPrefixOverride: odrl
    # This vocab is interesting in that it defines a lot of SKOS:Collection
    # terms in the namespace 'http://www.w3.org/ns/odrl/2/#' (note the trailing
    # slash). So without this namespace override our heuristics pick up that
    # value as the namespace to use (which then appears empty, 'cos that
    # namespace doesn't define any RDFS:Class or RDF:Property terms, only
    # SKOS:Collection terms).
    namespaceOverride: http://www.w3.org/ns/odrl/2/
    inputResources:
      - http://www.w3.org/ns/odrl/2/
    # This vocab also declares a number of annotation properties (for DCTERMS
    # and SKOS terms) to keep the ontology within OWL DL, so we want to ignore
    # those.
    ignoreNonVocabTerms: true

  - description: Security vocabulary
    nameAndPrefixOverride: sec
    # In mid-2021, the newly added term 'https://identity.foundation/EcdsaSecp256k1RecoverySignature2020#EcdsaSecp256k1RecoverySignature2020'
    # was causing our simple heuristic that guesses the namespace of a vocab
    # that doesn't explicitly state its namespace (which is bad form!) to
    # blow up - so we just provide the correct one manually here now instead.
    namespaceOverride: https://w3id.org/security#
    inputResources:
      - https://w3id.org/security#


  - description: JSON-LD vocabulary
    nameAndPrefixOverride: jsonld
    inputResources:
      - http://www.w3.org/ns/json-ld#

  - description: Evaluation and Report Language (EARL)
    nameAndPrefixOverride: earl
    inputResources:
      - http://www.w3.org/ns/earl#

  - description: Vocabulary Status (VS) - An RDF vocabulary for relating SW vocabulary terms to their status.
    inputResources:
      - http://www.w3.org/2003/06/sw-vocab-status/ns#

  - description: Description of a Project (DOAP) vocabulary
    nameAndPrefixOverride: doap
    inputResources:
      - http://usefulinc.com/ns/doap#
    # The server serving this vocabulary doesn't respond with a HTTP Content-Type header, so our
    # code can't know which RDF parser to use. So we need to tell it explicitly what the content
    # type returned actually is.
    vocabContentTypeHeaderFallback: application/rdf+xml

  - description: W3C Verifiable Credentials (VC) Data Model
    inputResources:
      - ./CopyOfVocab/inrupt-vc-data-model.ttl

  - description: The RDF Data Cube Vocabulary
    nameAndPrefixOverride: qb
    inputResources:
      - https://raw.githubusercontent.com/UKGovLD/publishing-statistical-data/master/specs/src/main/vocab/cube.ttl

  - description: SDMX Dimension Vocabulary
    nameAndPrefixOverride: sdmx-dimension
    inputResources:
      - https://raw.githubusercontent.com/UKGovLD/publishing-statistical-data/master/specs/src/main/vocab/sdmx-dimension.ttl

  - inputResources:
      - http://rdfs.org/sioc/ns#
    nameAndPrefixOverride: sioc
    ignoreNonVocabTerms: true

#
# It 'seems' to be the case that 44 vocabs being retrieved asynchronously causes the generator to
# blow up (with a 'readable-stream' error complaining about 'right-hand side of instanceof'). So
# until looking at pooling the promises (in the function 'async generateVocabs() {}' of
# ArtifactGenerator.js), just remove the more obscure vocabs to keep the upper limit 43!
#
#  - description: Ontology for surveys based on the Coney data model.
#    nameAndPrefixOverride: sur
#    inputResources:
#      - https://w3id.org/survey-ontology#
#    # The server serving this vocabulary doesn't honor the `q` parameter in Accept headers, so we
#    # need to explicitly ask for just Turtle.
#    vocabAcceptHeaderOverride: text/turtle
#    ignoreNonVocabTerms: true

#  - description: Time Ontology in OWL
#    nameAndPrefixOverride: time
#    inputResources:
#      - http://www.w3.org/2006/time#
